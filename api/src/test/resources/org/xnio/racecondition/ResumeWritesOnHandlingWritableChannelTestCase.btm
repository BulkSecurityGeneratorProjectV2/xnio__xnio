#
# JBoss, Home of Professional Open Source.
# Copyright 2012, Red Hat, Inc., and individual contributors
# as indicated by the @author tags. See the copyright.txt file in the
# distribution for a full listing of individual contributors.
#
# This is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2.1 of
# the License, or (at your option) any later version.
#
# This software is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this software; if not, write to the Free
# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
# 02110-1301 USA, or see the FSF site: http://www.fsf.org.
#

RULE enable race condition scenario
CLASS org.xnio.racecondition.ResumeWritesOnHandlingWritableChannelTestCase
METHOD test
AT INVOKE java.lang.Thread.start 1
IF TRUE
DO
    debug("Enabling race condition scenario"),
    flag("race condition enabled for ResumeWritesOnHandlingWritableChannelTestCase")
ENDRULE

RULE handle writable checked write requested is false
CLASS org.xnio.mock.ConnectedStreamChannelMock
METHOD suspendWrites
AT ENTRY
IF flagged("race condition enabled for ResumeWritesOnHandlingWritableChannelTestCase")
DO
    debug("TranslatingSuspendableChannel just checked that write is not requested... waiting for resumeWrites"),
    signalWake("write not requested checked", true),
    waitFor("write requested"),
    debug("Now write is requested... proceeding with handleWritable after a check that write is not requested")
ENDRULE

RULE resumeWrites after handleWritable checked write is not requested
CLASS org.xnio.channels.TranslatingSuspendableChannel
METHOD resumeWrites
AT ENTRY
IF flagged("race condition enabled for ResumeWritesOnHandlingWritableChannelTestCase")
DO
    debug("resumeWrites... waiting for handle writable to check write is not requested"),
    waitFor("write not requested checked"),
    debug("Proceeding with resumeWrites")
ENDRULE

RULE after resumeWrites
CLASS org.xnio.channels.TranslatingSuspendableChannel
METHOD resumeWrites
AT EXIT
IF flagged("race condition enabled for ResumeWritesOnHandlingWritableChannelTestCase")
DO
    debug("Finished resumeWrites... waking handleWritable"),
    signalWake("write requested", true)
ENDRULE