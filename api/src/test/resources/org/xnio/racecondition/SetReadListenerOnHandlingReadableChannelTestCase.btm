#
# JBoss, Home of Professional Open Source.
# Copyright 2012, Red Hat, Inc., and individual contributors
# as indicated by the @author tags. See the copyright.txt file in the
# distribution for a full listing of individual contributors.
#
# This is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2.1 of
# the License, or (at your option) any later version.
#
# This software is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this software; if not, write to the Free
# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
# 02110-1301 USA, or see the FSF site: http://www.fsf.org.
#

RULE handle readable before anything else
CLASS org.xnio.racecondition.SetReadListenerOnHandlingReadableChannelTestCase$SetReadListener
METHOD run
AT ENTRY
IF TRUE
DO
   debug("wait for handleReadable#1"),
   waitFor("handleReadable#1"),
   debug("proceed with SetReadListener#run")
ENDRULE

RULE handle readable 1
CLASS org.xnio.racecondition.SetReadListenerOnHandlingReadableChannelTestCase$InvokeHandleReadable
METHOD run
AFTER INVOKE org.xnio.racecondition.SetReadListenerOnHandlingReadableChannelTestCase$MyTranslatingSuspendableChannel.handleReadable 1
IF TRUE
DO
    debug("Finished attempt 1 to handle readable"),
    signalWake("handleReadable#1", true),
    flag("handle readable1 finished")
ENDRULE

RULE suspend reads
CLASS org.xnio.racecondition.SetReadListenerOnHandlingReadableChannelTestCase$SetReadListener
METHOD run
AFTER INVOKE org.xnio.racecondition.SetReadListenerOnHandlingReadableChannelTestCase$MyTranslatingSuspendableChannel.suspendReads()
IF TRUE
DO
    debug("Suspended reads... waking handleReadable#2"),
    signalWake("suspend reads", true),
    debug("Waiting for handleReadable#2 to complete"),
    waitFor("handleReadable#2"),
    debug("Proceeding with set read listener")
ENDRULE

RULE at handle readable 2
CLASS org.xnio.channels.TranslatingSuspendableChannel
METHOD handleReadable
AT INVOKE org.xnio.channels.TranslatingSuspendableChannel.clearFlags 1
IF flagged("handle readable1 finished") AND NOT flagged("handle readable2 finished")
DO
    debug("Waiting for suspended reads before proceeding with attempt 2 to handle readable"),
    waitFor("suspend reads")
ENDRULE

RULE after handle readable 2
CLASS org.xnio.racecondition.SetReadListenerOnHandlingReadableChannelTestCase$InvokeHandleReadable
METHOD run
AFTER INVOKE org.xnio.racecondition.SetReadListenerOnHandlingReadableChannelTestCase$MyTranslatingSuspendableChannel.handleReadable 2
IF TRUE
DO
    debug("Finished attempt 2 to handle readable"),
    signalWake("handleReadable#2", true),
    flag("handle readable2 finished")
ENDRULE


RULE set read listener
CLASS org.xnio.racecondition.SetReadListenerOnHandlingReadableChannelTestCase$SetReadListener
METHOD run
AFTER INVOKE org.xnio.ChannelListener$Setter.set
IF TRUE
DO
   debug("Changed listener... waking handleReadable#3"),
   signalWake("set listener", true),
   debug("Waiting for handleReadable#3 to complete"),
   waitFor("handleReadable#3"),
   debug("Proceeding with resumeReads")
ENDRULE

RULE at handle readable 3
CLASS org.xnio.channels.TranslatingSuspendableChannel
METHOD handleReadable
AT INVOKE org.xnio.Bits.anyAreSet 1
IF flagged("handle readable2 finished") AND NOT flagged("handle readable3 finished")
DO
    debug("Waiting for set listener before proceeding with attempt 3 to handle readable"),
    waitFor("set listener")
ENDRULE


RULE after handle readable 3
CLASS org.xnio.racecondition.SetReadListenerOnHandlingReadableChannelTestCase$InvokeHandleReadable
METHOD run
AFTER INVOKE org.xnio.racecondition.SetReadListenerOnHandlingReadableChannelTestCase$MyTranslatingSuspendableChannel.handleReadable 3
IF TRUE
DO
   debug("Finished attempt 3 to handle readable"),
   signalWake("handleReadable#3", true),
   flag("handle readable3 finished")
ENDRULE

RULE resume reads
CLASS org.xnio.racecondition.SetReadListenerOnHandlingReadableChannelTestCase$SetReadListener
METHOD run
AFTER INVOKE org.xnio.racecondition.SetReadListenerOnHandlingReadableChannelTestCase$MyTranslatingSuspendableChannel.resumeReads
IF TRUE
DO
   debug("Resumed reads... waking handleReadable#4"),
   signalWake("resume reads", true)
ENDRULE

RULE at handle readable 4
CLASS org.xnio.channels.TranslatingSuspendableChannel
METHOD handleReadable
AT INVOKE org.xnio.channels.TranslatingSuspendableChannel.clearFlags 1
IF flagged("handle readable3 finished")
DO
    debug("Waiting for resume reads before proceeding with attempt 4 to handle readable"),
    waitFor("resume reads")
ENDRULE